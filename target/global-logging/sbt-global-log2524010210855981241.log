[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\lenovo\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\lenovo\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 11.0.20)
[debug]       Load.loadUnit: plugins took 133.9421ms
[debug]       Load.loadUnit: defsScala took 0.428399ms
[debug] [Loading] Scanning directory C:\Users\lenovo\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lenovo\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.1244 ms
[debug]           Load.resolveProject(global-plugins) took 70.1957ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\lenovo\.sbt\1.0\plugins, plugins: List(<none>))) took 140.3945ms
[debug] [Loading] Done in C:\Users\lenovo\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 173.5115ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2888ms
[debug]     Load.loadUnit(file:/C:/Users/lenovo/.sbt/1.0/plugins/, ...) took 319.0913ms
[debug]   Load.apply: load took 569.8667ms
[debug]   Load.apply: resolveProjects took 7.9482ms
[debug]   Load.apply: finalTransforms took 76.075799ms
[debug]   Load.apply: config.delegates took 10.074999ms
[debug]   Load.apply: Def.make(settings)... took 487.271101ms
[debug]   Load.apply: structureIndex took 113.0712ms
[debug]   Load.apply: mkStreams took 1.7667ms
[info] loading global plugins from C:\Users\lenovo\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6936.214699ms
[debug]           Load.loadUnit: plugins took 34.7089ms
[debug]           Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\lenovo\Documents\Scala basic\project
[debug]             Load.loadUnit: mkEval took 11.357ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lenovo\Documents\Scala basic\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7075 ms
[info] loading settings for project scala-basic-build from idea.sbt ...
[debug]               Load.resolveProject(scala-basic-build) took 2.817999ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-basic-build, base: C:\Users\lenovo\Documents\Scala basic\project, plugins: List(<none>))) took 4.9ms
[debug] [Loading] Done in C:\Users\lenovo\Documents\Scala basic\project, returning: (scala-basic-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2602.815699ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.748301ms
[debug]         Load.loadUnit(file:/C:/Users/lenovo/Documents/Scala%20basic/project/, ...) took 2642.242099ms
[debug]       Load.apply: load took 2643.812201ms
[debug]       Load.apply: resolveProjects took 0.088401ms
[debug]       Load.apply: finalTransforms took 8.9747ms
[debug]       Load.apply: config.delegates took 0.4664ms
[debug]       Load.apply: Def.make(settings)... took 83.925399ms
[debug]       Load.apply: structureIndex took 32.667001ms
[debug]       Load.apply: mkStreams took 0.002399ms
[info] loading project definition from C:\Users\lenovo\Documents\Scala basic\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 12466.8391ms
[debug]     Load.loadUnit: defsScala took 0.002799ms
[debug] [Loading] Scanning directory C:\Users\lenovo\Documents\Scala basic
[debug]       Load.loadUnit: mkEval took 0.239701ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3913 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 42.402399ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\lenovo\Documents\Scala basic, plugins: List(<none>))) took 46.5707ms
[debug] [Loading] Done in C:\Users\lenovo\Documents\Scala basic, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1285.0883ms
[debug]     Load.loadUnit: cleanEvalClasses took 25.0049ms
[debug]   Load.loadUnit(file:/C:/Users/lenovo/Documents/Scala%20basic/, ...) took 13777.564399ms
[debug] Load.apply: load took 13780.383199ms
[debug] Load.apply: resolveProjects took 0.4308ms
[debug] Load.apply: finalTransforms took 47.490799ms
[debug] Load.apply: config.delegates took 0.382899ms
[debug] Load.apply: Def.make(settings)... took 111.597699ms
[debug] Load.apply: structureIndex took 21.968799ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to Scala basic (in build file:/C:/Users/lenovo/Documents/Scala%20basic/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58767 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58767, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Scala basic (in build file:/C:/Users/lenovo/Documents/Scala%20basic/)
[debug] > Exec(idea-shell, None, None)
